# Generated by Django 3.1.2 on 2020-12-07 17:40

from django.db import migrations
from django.conf import settings

def make_encounter(apps, schema_editor):
	Encounter = apps.get_model('core','Encounter')
	EncounterStatus = apps.get_model('core','EncounterStatus')

	default_inactive = EncounterStatus.objects.get_or_create(
        name=settings.OSLER_DEFAULT_INACTIVE_STATUS[0],
        is_active=settings.OSLER_DEFAULT_INACTIVE_STATUS[1])[0]

	Workup = apps.get_model('workup','Workup')
	for workup in Workup.objects.all():
		workup.encounter = Encounter.objects.get_or_create(
			patient=workup.patient,
			clinic_day=workup.clinic_day.clinic_date,
			status=default_inactive)[0]
		workup.save()

	Lab = apps.get_model('labs','Lab')
	for lab in Lab.objects.all():
		lab.encounter = Encounter.objects.get_or_create(
			patient=lab.patient,
			clinic_day=lab.lab_time,
			status=default_inactive)[0]
		lab.save()

	note_types = [('workup','BasicNote'), ('workup','AttestableBasicNote'),
		('inventory','DispenseHistory'),('vaccine','VaccineDose')]

	for app, model in note_types:
		notes = apps.get_model(app, model)
		for note in notes.objects.all():
			note.encounter = Encounter.objects.get_or_create(
				patient=note.patient,
				clinic_day=note.written_datetime,
				status=default_inactive)[0]
			note.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0006_encounter_encounterstatus'),
        ('workup', '0007_auto_20201203_1940'),
        ('labs','0003_lab_encounter'),
        ('inventory','0003_dispensehistory_encounter'),
        ('vaccine','0002_vaccinedose_encounter')
    ]

    operations = [
    	migrations.RunPython(make_encounter),
    ]
