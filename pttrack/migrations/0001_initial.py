# Generated by Django 2.0.13 on 2020-05-03 15:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pttrack.models
import pttrack.validators
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionInstruction',
            fields=[
                ('instruction', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActionItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(help_text='MM/DD/YYYY')),
                ('priority', models.BooleanField(default=False, help_text='Check this box if this action item is high priority')),
                ('comments', models.TextField()),
            ],
            options={
                'ordering': ['-written_datetime', '-last_modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactMethod',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('image', models.FileField(help_text='Please deidentify all file names before upload! Delete all files after upload!', upload_to=pttrack.models.make_filepath, verbose_name='PDF File or Image Upload')),
                ('comments', models.TextField()),
            ],
            options={
                'ordering': ['-written_datetime', '-last_modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'ethnicities',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('long_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('short_name', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalActionItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateField(help_text='MM/DD/YYYY')),
                ('priority', models.BooleanField(default=False, help_text='Check this box if this action item is high priority')),
                ('comments', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical action item',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocument',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('written_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_modified', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=200)),
                ('image', models.TextField(help_text='Please deidentify all file names before upload! Delete all files after upload!', max_length=100, verbose_name='PDF File or Image Upload')),
                ('comments', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical document',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPatient',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('last_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('middle_name', models.CharField(blank=True, max_length=100, validators=[pttrack.validators.validate_name])),
                ('phone', models.CharField(blank=True, max_length=40, null=True)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(default='St. Louis', max_length=50)),
                ('state', models.CharField(default='MO', max_length=2)),
                ('zip_code', models.CharField(max_length=5, validators=[pttrack.validators.validate_zip])),
                ('country', models.CharField(default='USA', max_length=100)),
                ('pcp_preferred_zip', models.CharField(blank=True, max_length=5, null=True, validators=[pttrack.validators.validate_zip])),
                ('date_of_birth', models.DateField(help_text='MM/DD/YYYY', validators=[pttrack.validators.validate_birth_date])),
                ('patient_comfortable_with_english', models.BooleanField(default=True)),
                ('alternate_phone_1_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_1', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_2_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_2', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_3_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_3', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_4_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_4', models.CharField(blank=True, max_length=40, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('needs_workup', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('gender', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Gender')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical patient',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProvider',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('last_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('middle_name', models.CharField(blank=True, max_length=100, validators=[pttrack.validators.validate_name])),
                ('phone', models.CharField(blank=True, max_length=40, null=True)),
                ('needs_updating', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('associated_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('gender', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Gender')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical provider',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('last_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('middle_name', models.CharField(blank=True, max_length=100, validators=[pttrack.validators.validate_name])),
                ('phone', models.CharField(blank=True, max_length=40, null=True)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(default='St. Louis', max_length=50)),
                ('state', models.CharField(default='MO', max_length=2)),
                ('zip_code', models.CharField(max_length=5, validators=[pttrack.validators.validate_zip])),
                ('country', models.CharField(default='USA', max_length=100)),
                ('pcp_preferred_zip', models.CharField(blank=True, max_length=5, null=True, validators=[pttrack.validators.validate_zip])),
                ('date_of_birth', models.DateField(help_text='MM/DD/YYYY', validators=[pttrack.validators.validate_birth_date])),
                ('patient_comfortable_with_english', models.BooleanField(default=True)),
                ('alternate_phone_1_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_1', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_2_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_2', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_3_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_3', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_4_owner', models.CharField(blank=True, max_length=40, null=True)),
                ('alternate_phone_4', models.CharField(blank=True, max_length=40, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('needs_workup', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('last_name', models.CharField(max_length=100, validators=[pttrack.validators.validate_name])),
                ('middle_name', models.CharField(blank=True, max_length=100, validators=[pttrack.validators.validate_name])),
                ('phone', models.CharField(blank=True, max_length=40, null=True)),
                ('needs_updating', models.BooleanField(default=False)),
                ('associated_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProviderType',
            fields=[
                ('long_name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('signs_charts', models.BooleanField(default=False)),
                ('staff_view', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ReferralType',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('is_fqhc', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='referrallocation',
            name='care_availiable',
            field=models.ManyToManyField(to='pttrack.ReferralType'),
        ),
        migrations.AddField(
            model_name='provider',
            name='clinical_roles',
            field=models.ManyToManyField(to='pttrack.ProviderType'),
        ),
        migrations.AddField(
            model_name='provider',
            name='gender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Gender'),
        ),
        migrations.AddField(
            model_name='provider',
            name='languages',
            field=models.ManyToManyField(help_text='Specify here languages that are spoken at a level sufficient to be used for medical communication.', to='pttrack.Language'),
        ),
        migrations.AddField(
            model_name='patient',
            name='case_managers',
            field=models.ManyToManyField(to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='patient',
            name='ethnicities',
            field=models.ManyToManyField(to='pttrack.Ethnicity'),
        ),
        migrations.AddField(
            model_name='patient',
            name='gender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Gender'),
        ),
        migrations.AddField(
            model_name='patient',
            name='languages',
            field=models.ManyToManyField(help_text='Specify here languages that are spoken at a level sufficient to be used for medical communication.', to='pttrack.Language'),
        ),
        migrations.AddField(
            model_name='patient',
            name='outcome',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pttrack.Outcome'),
        ),
        migrations.AddField(
            model_name='patient',
            name='preferred_contact_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='pttrack.ContactMethod'),
        ),
        migrations.AddField(
            model_name='historicalpatient',
            name='outcome',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Outcome'),
        ),
        migrations.AddField(
            model_name='historicalpatient',
            name='preferred_contact_method',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.ContactMethod'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='author_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.ProviderType'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='document_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.DocumentType'),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldocument',
            name='patient',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Patient'),
        ),
        migrations.AddField(
            model_name='historicalactionitem',
            name='author',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='historicalactionitem',
            name='author_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.ProviderType'),
        ),
        migrations.AddField(
            model_name='historicalactionitem',
            name='completion_author',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='historicalactionitem',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalactionitem',
            name='instruction',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.ActionInstruction'),
        ),
        migrations.AddField(
            model_name='historicalactionitem',
            name='patient',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='pttrack.Patient'),
        ),
        migrations.AddField(
            model_name='document',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='document',
            name='author_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.ProviderType'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.DocumentType'),
        ),
        migrations.AddField(
            model_name='document',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Patient'),
        ),
        migrations.AddField(
            model_name='actionitem',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='actionitem',
            name='author_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.ProviderType'),
        ),
        migrations.AddField(
            model_name='actionitem',
            name='completion_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='pttrack_actionitem_completed', to='pttrack.Provider'),
        ),
        migrations.AddField(
            model_name='actionitem',
            name='instruction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.ActionInstruction'),
        ),
        migrations.AddField(
            model_name='actionitem',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pttrack.Patient'),
        ),
    ]
